name: Deploy to GCP and GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'pom.xml'
      - 'front/stocks-stats/**'
      - '.github/workflows/**'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE_NAME: stocks-stats
  REGION: us-central1

jobs:
  backend-deploy:
    name: Backend - Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Get version from pom.xml
        run: echo "APP_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          docker build --build-arg JAR_FILE=target/stocks-stats-${{ env.APP_VERSION }}.jar -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ env.APP_VERSION }}-$GITHUB_SHA .
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ env.APP_VERSION }}-$GITHUB_SHA

      - name: Deploy to Cloud Run
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          N_THREADS: ${{ secrets.N_THREADS }}
          REDDIT_API_KEY: ${{ secrets.REDDIT_API_KEY }}
          REDDIT_SECRET_KEY: ${{ secrets.REDDIT_SECRET_KEY }}
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ env.APP_VERSION }}-${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated

  frontend-deploy:
    name: Frontend - Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install and Build Frontend
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        run: |
          cd front/stocks-stats
          npm ci
          npm run build

      - name: Deploy Frontend to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./front/stocks-stats/out
          cname: stocks.adrianlopez.tech